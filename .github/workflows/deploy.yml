name: Deploy (systemd-lite)

on:
  push:
    branches: [ main ]    # main 브랜치에 push될 때 배포 진행

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: SSH pull & restart via systemd
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e

            # 1) 깃 저장소 폴더로 이동 후 최신 코드로 초기화
            cd ${{ secrets.REPO_DIR }}
            git fetch --all
            git reset --hard origin/main
            git clean -fd

            # --- uwsgi.ini 파일 생성 시작 (이 부분이 추가되었습니다!) ---
            echo "Creating uwsgi.ini file..."
            cat << EOF > uwsgi.ini
            [uwsgi]
            pythonpath = .
            module = FarmFarm_prj.wsgi:application
            home = ./myvenv
            master = true
            processes = 2
            socket = ./uwsgi.sock
            chmod-socket = 666
            vacuum = true
            post-buffering = 10485760
            buffer-size = 65535
            lazy-apps = true
            tmp-dir = ./tmp
            EOF
            # --- uwsgi.ini 파일 생성 끝 ---

            # --- .env 파일 생성 시작 (이 부분이 추가되었습니다!) ---
            echo "Creating .env file..."
            cat << EOF > .env
            GOOGLE_APPLICATION_CREDENTIALS=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_PATH }}
            GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            BUYER_PASSWORD=${{ secrets.BUYER_PASSWORD }}
            SELLER_PASSWORD=${{ secrets.SELLER_PASSWORD }}
          
            EOF
            # --- .env 파일 생성 끝 ---

            # 2) 장고 앱 폴더에서 migrate 및 기타 작업
            cd ${{ secrets.APP_DIR }}
            if [ -d "myvenv" ]; then
              source myvenv/bin/activate
              pip install --upgrade pip
              if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
              python manage.py migrate --noinput
              python manage.py collectstatic --noinput
            fi

            # 3) 서비스 재시작
            sudo systemctl restart uwsgi
            sudo nginx -t && sudo systemctl reload nginx || true
